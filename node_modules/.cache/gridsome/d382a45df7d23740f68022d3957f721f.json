{"remainingRequest":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\gridsome\\app\\utils\\helpers.js","dependencies":[{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\gridsome\\app\\utils\\helpers.js","mtime":1725826222024},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1725826210235},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js","mtime":1725826212301}],"contextDependencies":[],"result":["import config from '~/.temp/config';\nconst re = new RegExp(`^${config.pathPrefix}/?`);\nexport function unslash(string) {\n  return string.replace(/^\\/+|\\/+$/g, '');\n}\nexport function unslashStart(string) {\n  return string.replace(/^\\/+/g, '');\n}\nexport function unslashEnd(string) {\n  return string.replace(/\\/+$/g, '');\n}\nexport function url(string = '/') {\n  return normalizePath(`${config.pathPrefix}/${string}`);\n}\nexport function stripPageParam(route) {\n  const {\n    path,\n    params: {\n      page\n    }\n  } = route;\n  const normalizedPath = unslashEnd(path);\n  const suffix = /\\/$/.test(path) ? '/' : '';\n  return page && /^\\d+$/.test(page) && /\\/\\d+$/.test(normalizedPath) ? `${normalizedPath.split('/').slice(0, -1).join('/')}${suffix}` || '/' : `${normalizedPath}${suffix}` || '/';\n}\nexport function stripPathPrefix(string) {\n  return '/' + unslashStart(string.replace(re, ''));\n}\nexport function parsePath(path) {\n  let pathname = path || '/';\n  let query = '';\n  let hash = '';\n  [pathname, hash = ''] = path.split('#');\n  [pathname, query = ''] = pathname.split('?');\n  return {\n    pathname,\n    query: query ? `?${query}` : '',\n    hash: hash ? `#${hash}` : ''\n  };\n}\nexport function normalizePath(path = '/') {\n  return `/${path}`.replace(/\\/+/g, '/');\n}\nexport const isMailtoLink = string => String(string).startsWith('mailto:');\nexport const isTelLink = string => String(string).startsWith('tel:');",{"version":3,"names":["config","re","RegExp","pathPrefix","unslash","string","replace","unslashStart","unslashEnd","url","normalizePath","stripPageParam","route","path","params","page","normalizedPath","suffix","test","split","slice","join","stripPathPrefix","parsePath","pathname","query","hash","isMailtoLink","String","startsWith","isTelLink"],"sources":["C:/Users/Oluwaseun Olowu/Documents/Njtd/njtd_site_new/node_modules/gridsome/app/utils/helpers.js"],"sourcesContent":["import config from '~/.temp/config'\n\nconst re = new RegExp(`^${config.pathPrefix}/?`)\n\nexport function unslash (string) {\n  return string.replace(/^\\/+|\\/+$/g, '')\n}\n\nexport function unslashStart (string) {\n  return string.replace(/^\\/+/g, '')\n}\n\nexport function unslashEnd (string) {\n  return string.replace(/\\/+$/g, '')\n}\n\nexport function url (string = '/') {\n  return normalizePath(`${config.pathPrefix}/${string}`)\n}\n\nexport function stripPageParam (route) {\n  const { path, params: { page }} = route\n  const normalizedPath = unslashEnd(path)\n  const suffix = /\\/$/.test(path) ? '/' : ''\n\n  return page && /^\\d+$/.test(page) && /\\/\\d+$/.test(normalizedPath)\n    ? `${normalizedPath.split('/').slice(0, -1).join('/')}${suffix}` || '/'\n    : `${normalizedPath}${suffix}` || '/'\n}\n\nexport function stripPathPrefix (string) {\n  return '/' + unslashStart(string.replace(re, ''))\n}\n\nexport function parsePath (path) {\n  let pathname = path || '/'\n  let query = ''\n  let hash = ''\n\n  ;[pathname, hash = ''] = path.split('#')\n  ;[pathname, query = ''] = pathname.split('?')\n\n  return {\n    pathname,\n    query: query ? `?${query}` : '',\n    hash: hash ? `#${hash}` : ''\n  }\n}\n\nexport function normalizePath (path = '/') {\n  return `/${path}`.replace(/\\/+/g, '/')\n}\n\nexport const isMailtoLink = string => String(string).startsWith('mailto:')\n\nexport const isTelLink = string => String(string).startsWith('tel:')"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AAEA,MAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAY,IAAGF,MAAM,CAACG,UAAW,IAAjC,CAAX;AAEA,OAAO,SAASC,OAAT,CAAkBC,MAAlB,EAA0B;EAC/B,OAAOA,MAAM,CAACC,OAAP,CAAe,YAAf,EAA6B,EAA7B,CAAP;AACD;AAED,OAAO,SAASC,YAAT,CAAuBF,MAAvB,EAA+B;EACpC,OAAOA,MAAM,CAACC,OAAP,CAAe,OAAf,EAAwB,EAAxB,CAAP;AACD;AAED,OAAO,SAASE,UAAT,CAAqBH,MAArB,EAA6B;EAClC,OAAOA,MAAM,CAACC,OAAP,CAAe,OAAf,EAAwB,EAAxB,CAAP;AACD;AAED,OAAO,SAASG,GAAT,CAAcJ,MAAM,GAAG,GAAvB,EAA4B;EACjC,OAAOK,aAAa,CAAE,GAAEV,MAAM,CAACG,UAAW,IAAGE,MAAO,EAAhC,CAApB;AACD;AAED,OAAO,SAASM,cAAT,CAAyBC,KAAzB,EAAgC;EACrC,MAAM;IAAEC,IAAF;IAAQC,MAAM,EAAE;MAAEC;IAAF;EAAhB,IAA4BH,KAAlC;EACA,MAAMI,cAAc,GAAGR,UAAU,CAACK,IAAD,CAAjC;EACA,MAAMI,MAAM,GAAG,MAAMC,IAAN,CAAWL,IAAX,IAAmB,GAAnB,GAAyB,EAAxC;EAEA,OAAOE,IAAI,IAAI,QAAQG,IAAR,CAAaH,IAAb,CAAR,IAA8B,SAASG,IAAT,CAAcF,cAAd,CAA9B,GACF,GAAEA,cAAc,CAACG,KAAf,CAAqB,GAArB,EAA0BC,KAA1B,CAAgC,CAAhC,EAAmC,CAAC,CAApC,EAAuCC,IAAvC,CAA4C,GAA5C,CAAiD,GAAEJ,MAAO,EAA7D,IAAkE,GAD/D,GAEF,GAAED,cAAe,GAAEC,MAAO,EAA3B,IAAgC,GAFpC;AAGD;AAED,OAAO,SAASK,eAAT,CAA0BjB,MAA1B,EAAkC;EACvC,OAAO,MAAME,YAAY,CAACF,MAAM,CAACC,OAAP,CAAeL,EAAf,EAAmB,EAAnB,CAAD,CAAzB;AACD;AAED,OAAO,SAASsB,SAAT,CAAoBV,IAApB,EAA0B;EAC/B,IAAIW,QAAQ,GAAGX,IAAI,IAAI,GAAvB;EACA,IAAIY,KAAK,GAAG,EAAZ;EACA,IAAIC,IAAI,GAAG,EAAX;EAEC,CAACF,QAAD,EAAWE,IAAI,GAAG,EAAlB,IAAwBb,IAAI,CAACM,KAAL,CAAW,GAAX,CAAxB;EACA,CAACK,QAAD,EAAWC,KAAK,GAAG,EAAnB,IAAyBD,QAAQ,CAACL,KAAT,CAAe,GAAf,CAAzB;EAED,OAAO;IACLK,QADK;IAELC,KAAK,EAAEA,KAAK,GAAI,IAAGA,KAAM,EAAb,GAAiB,EAFxB;IAGLC,IAAI,EAAEA,IAAI,GAAI,IAAGA,IAAK,EAAZ,GAAgB;EAHrB,CAAP;AAKD;AAED,OAAO,SAAShB,aAAT,CAAwBG,IAAI,GAAG,GAA/B,EAAoC;EACzC,OAAQ,IAAGA,IAAK,EAAT,CAAWP,OAAX,CAAmB,MAAnB,EAA2B,GAA3B,CAAP;AACD;AAED,OAAO,MAAMqB,YAAY,GAAGtB,MAAM,IAAIuB,MAAM,CAACvB,MAAD,CAAN,CAAewB,UAAf,CAA0B,SAA1B,CAA/B;AAEP,OAAO,MAAMC,SAAS,GAAGzB,MAAM,IAAIuB,MAAM,CAACvB,MAAD,CAAN,CAAewB,UAAf,CAA0B,MAA1B,CAA5B"}]}