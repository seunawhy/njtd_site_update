{"remainingRequest":"C:\\Users\\Oluwaseun Olowu\\Desktop\\njtd_site_update\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!C:\\Users\\Oluwaseun Olowu\\Desktop\\njtd_site_update\\src\\store\\modules\\article.js","dependencies":[{"path":"C:\\Users\\Oluwaseun Olowu\\Desktop\\njtd_site_update\\src\\store\\modules\\article.js","mtime":1725521740120},{"path":"C:\\Users\\Oluwaseun Olowu\\Desktop\\njtd_site_update\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1725826210235},{"path":"C:\\Users\\Oluwaseun Olowu\\Desktop\\njtd_site_update\\node_modules\\babel-loader\\lib\\index.js","mtime":1725826212301}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.push.js\";\nimport { $http } from '~/utils/http';\nexport default {\n  namespaced: true,\n  state: {\n    articles: [],\n    all: [],\n    recent: []\n  },\n  getters: {\n    all: state => state.articles,\n    allArticles: state => state.all,\n    recent: state => state.recent\n  },\n  mutations: {\n    SET(state, property) {\n      state[property.target] = property.value;\n    }\n  },\n  actions: {\n    async fetchArticles({\n      commit\n    }) {\n      let articles = [];\n      commit('SET_STATE', {\n        target: 'loading',\n        value: true\n      }, {\n        root: true\n      });\n      try {\n        let submissions = await $http.get('/issues/current');\n        submissions.articles.forEach(submission => {\n          articles.push(...submission.publications);\n        });\n        commit('SET_STATE', {\n          target: 'currentIssue',\n          value: {\n            id: submissions.id,\n            identification: submissions.identification,\n            coverImage: submissions.coverImageUrl,\n            datePublished: submissions.datePublished\n          }\n        }, {\n          root: true\n        });\n        let arts = articles;\n        arts.sort((f, s) => {\n          let fPages = f.pages.split('-');\n          let sPages = s.pages.split('-');\n          if (isNaN(parseInt(fPages[0]))) return 1;else if (isNaN(parseInt(sPages[0]))) return 1;\n          return parseInt(fPages[0]) > parseInt(sPages[0]) ? 1 : -1;\n        });\n        commit('SET', {\n          target: 'all',\n          value: arts\n        });\n      } catch (ex) {\n        console.log(ex);\n        commit('SET_STATE', {\n          target: 'currentIssue',\n          value: null\n        }, {\n          root: true\n        });\n        commit('SET', {\n          target: 'all',\n          value: null\n        });\n      }\n      commit('SET_STATE', {\n        target: 'loading',\n        value: false\n      }, {\n        root: true\n      });\n    }\n  }\n};",{"version":3,"names":["$http","namespaced","state","articles","all","recent","getters","allArticles","mutations","SET","property","target","value","actions","fetchArticles","commit","root","submissions","get","forEach","submission","push","publications","id","identification","coverImage","coverImageUrl","datePublished","arts","sort","f","s","fPages","pages","split","sPages","isNaN","parseInt","ex","console","log"],"sources":["C:/Users/Oluwaseun Olowu/Desktop/njtd_site_update/src/store/modules/article.js"],"sourcesContent":["import { $http } from '~/utils/http'\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        articles: [],\r\n        all: [],\r\n        recent: []\r\n    },\r\n\r\n    getters: {\r\n        all: state => state.articles,\r\n        allArticles: state => state.all,\r\n        recent: state => state.recent\r\n    },\r\n\r\n    mutations: {\r\n        SET(state, property) {\r\n            state[property.target] = property.value\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        async fetchArticles({ commit }) {\r\n            let articles = []\r\n            commit('SET_STATE', {\r\n                target: 'loading',\r\n                value: true\r\n            }, { root: true })\r\n            try {\r\n                let submissions = await $http.get('/issues/current')\r\n                submissions.articles.forEach((submission) => {\r\n                    articles.push(...submission.publications)\r\n                })\r\n                commit('SET_STATE', {\r\n                    target: 'currentIssue',\r\n                    value: {\r\n                        id: submissions.id,\r\n                        identification: submissions.identification,\r\n                        coverImage: submissions.coverImageUrl,\r\n                        datePublished: submissions.datePublished\r\n                    }\r\n                }, { root: true })\r\n                let arts = articles\r\n                arts.sort((f, s) => {\r\n                    let fPages = f.pages.split('-')\r\n                    let sPages = s.pages.split('-')\r\n                    if (isNaN(parseInt(fPages[0]))) return 1\r\n                    else if (isNaN(parseInt(sPages[0]))) return 1\r\n                    return parseInt(fPages[0]) > parseInt(sPages[0]) ? 1 : -1\r\n                })\r\n                commit('SET', {\r\n                    target: 'all',\r\n                    value: arts\r\n                })\r\n            } catch (ex) {\r\n                console.log(ex)\r\n                commit('SET_STATE', {\r\n                    target: 'currentIssue',\r\n                    value: null\r\n                }, { root: true })\r\n                commit('SET', {\r\n                    target: 'all',\r\n                    value: null\r\n                })\r\n            }\r\n            commit('SET_STATE', {\r\n                target: 'loading',\r\n                value: false\r\n            }, { root: true })\r\n        }\r\n    }\r\n}"],"mappings":"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","ignoreList":[]}]}