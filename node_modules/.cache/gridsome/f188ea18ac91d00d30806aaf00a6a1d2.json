{"remainingRequest":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\gridsome\\app\\graphql\\shared.js","dependencies":[{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\gridsome\\app\\graphql\\shared.js","mtime":1725826223973},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1725826210235},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js","mtime":1725826212301}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport { unslash } from '../utils/helpers';\nconst cache = Vue.observable({});\n\nconst normalize = path => unslash(path) || '/';\n\nexport function setResults(path, res) {\n  return Vue.set(cache, normalize(path), res);\n}\nexport function getResults(path) {\n  return cache[normalize(path)];\n}\nexport function clearAllResults(currentPath) {\n  currentPath = normalize(currentPath);\n\n  for (const path in cache) {\n    if (path !== currentPath) {\n      Vue.delete(cache, path);\n    }\n  }\n}\nexport function formatError(err, route) {\n  const matched = route.matched[0];\n  const options = matched ? matched.components.default : {};\n\n  if (err.stringified && options.__file) {\n    console.error(`An error occurred while executing ` + `query for ${options.__file}\\n\\n` + `Error: ${err.stringified}`);\n  }\n}",null]}