{"remainingRequest":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\src\\store\\modules\\article.js","dependencies":[{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\src\\store\\modules\\article.js","mtime":1725521740120},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1725826210235},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js","mtime":1725826212301}],"contextDependencies":[],"result":["import { $http } from '~/utils/http';\nexport default {\n  namespaced: true,\n  state: {\n    articles: [],\n    all: [],\n    recent: []\n  },\n  getters: {\n    all: state => state.articles,\n    allArticles: state => state.all,\n    recent: state => state.recent\n  },\n  mutations: {\n    SET(state, property) {\n      state[property.target] = property.value;\n    }\n\n  },\n  actions: {\n    async fetchArticles({\n      commit\n    }) {\n      let articles = [];\n      commit('SET_STATE', {\n        target: 'loading',\n        value: true\n      }, {\n        root: true\n      });\n\n      try {\n        let submissions = await $http.get('/issues/current');\n        submissions.articles.forEach(submission => {\n          articles.push(...submission.publications);\n        });\n        commit('SET_STATE', {\n          target: 'currentIssue',\n          value: {\n            id: submissions.id,\n            identification: submissions.identification,\n            coverImage: submissions.coverImageUrl,\n            datePublished: submissions.datePublished\n          }\n        }, {\n          root: true\n        });\n        let arts = articles;\n        arts.sort((f, s) => {\n          let fPages = f.pages.split('-');\n          let sPages = s.pages.split('-');\n          if (isNaN(parseInt(fPages[0]))) return 1;else if (isNaN(parseInt(sPages[0]))) return 1;\n          return parseInt(fPages[0]) > parseInt(sPages[0]) ? 1 : -1;\n        });\n        commit('SET', {\n          target: 'all',\n          value: arts\n        });\n      } catch (ex) {\n        console.log(ex);\n        commit('SET_STATE', {\n          target: 'currentIssue',\n          value: null\n        }, {\n          root: true\n        });\n        commit('SET', {\n          target: 'all',\n          value: null\n        });\n      }\n\n      commit('SET_STATE', {\n        target: 'loading',\n        value: false\n      }, {\n        root: true\n      });\n    }\n\n  }\n};",{"version":3,"names":["$http","namespaced","state","articles","all","recent","getters","allArticles","mutations","SET","property","target","value","actions","fetchArticles","commit","root","submissions","get","forEach","submission","push","publications","id","identification","coverImage","coverImageUrl","datePublished","arts","sort","f","s","fPages","pages","split","sPages","isNaN","parseInt","ex","console","log"],"sources":["C:/Users/Oluwaseun Olowu/Documents/Njtd/njtd_site_new/src/store/modules/article.js"],"sourcesContent":["import { $http } from '~/utils/http'\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        articles: [],\r\n        all: [],\r\n        recent: []\r\n    },\r\n\r\n    getters: {\r\n        all: state => state.articles,\r\n        allArticles: state => state.all,\r\n        recent: state => state.recent\r\n    },\r\n\r\n    mutations: {\r\n        SET(state, property) {\r\n            state[property.target] = property.value\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        async fetchArticles({ commit }) {\r\n            let articles = []\r\n            commit('SET_STATE', {\r\n                target: 'loading',\r\n                value: true\r\n            }, { root: true })\r\n            try {\r\n                let submissions = await $http.get('/issues/current')\r\n                submissions.articles.forEach((submission) => {\r\n                    articles.push(...submission.publications)\r\n                })\r\n                commit('SET_STATE', {\r\n                    target: 'currentIssue',\r\n                    value: {\r\n                        id: submissions.id,\r\n                        identification: submissions.identification,\r\n                        coverImage: submissions.coverImageUrl,\r\n                        datePublished: submissions.datePublished\r\n                    }\r\n                }, { root: true })\r\n                let arts = articles\r\n                arts.sort((f, s) => {\r\n                    let fPages = f.pages.split('-')\r\n                    let sPages = s.pages.split('-')\r\n                    if (isNaN(parseInt(fPages[0]))) return 1\r\n                    else if (isNaN(parseInt(sPages[0]))) return 1\r\n                    return parseInt(fPages[0]) > parseInt(sPages[0]) ? 1 : -1\r\n                })\r\n                commit('SET', {\r\n                    target: 'all',\r\n                    value: arts\r\n                })\r\n            } catch (ex) {\r\n                console.log(ex)\r\n                commit('SET_STATE', {\r\n                    target: 'currentIssue',\r\n                    value: null\r\n                }, { root: true })\r\n                commit('SET', {\r\n                    target: 'all',\r\n                    value: null\r\n                })\r\n            }\r\n            commit('SET_STATE', {\r\n                target: 'loading',\r\n                value: false\r\n            }, { root: true })\r\n        }\r\n    }\r\n}"],"mappings":"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"}]}