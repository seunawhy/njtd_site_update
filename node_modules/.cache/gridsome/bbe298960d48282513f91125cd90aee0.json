{"remainingRequest":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\gridsome\\app\\utils\\helpers.js","dependencies":[{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\gridsome\\app\\utils\\helpers.js","mtime":1725826222024},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1725826210235},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js","mtime":1725826212301}],"contextDependencies":[],"result":["import config from '~/.temp/config';\nconst re = new RegExp(`^${config.pathPrefix}/?`);\nexport function unslash(string) {\n  return string.replace(/^\\/+|\\/+$/g, '');\n}\nexport function unslashStart(string) {\n  return string.replace(/^\\/+/g, '');\n}\nexport function unslashEnd(string) {\n  return string.replace(/\\/+$/g, '');\n}\nexport function url(string = '/') {\n  return normalizePath(`${config.pathPrefix}/${string}`);\n}\nexport function stripPageParam(route) {\n  const {\n    path,\n    params: {\n      page\n    }\n  } = route;\n  const normalizedPath = unslashEnd(path);\n  const suffix = /\\/$/.test(path) ? '/' : '';\n  return page && /^\\d+$/.test(page) && /\\/\\d+$/.test(normalizedPath) ? `${normalizedPath.split('/').slice(0, -1).join('/')}${suffix}` || '/' : `${normalizedPath}${suffix}` || '/';\n}\nexport function stripPathPrefix(string) {\n  return '/' + unslashStart(string.replace(re, ''));\n}\nexport function parsePath(path) {\n  let pathname = path || '/';\n  let query = '';\n  let hash = '';\n  [pathname, hash = ''] = path.split('#');\n  [pathname, query = ''] = pathname.split('?');\n  return {\n    pathname,\n    query: query ? `?${query}` : '',\n    hash: hash ? `#${hash}` : ''\n  };\n}\nexport function normalizePath(path = '/') {\n  return `/${path}`.replace(/\\/+/g, '/');\n}\nexport const isMailtoLink = string => String(string).startsWith('mailto:');\nexport const isTelLink = string => String(string).startsWith('tel:');",null]}