{"remainingRequest":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\gridsome\\app\\fetch.js","dependencies":[{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\gridsome\\app\\fetch.js","mtime":1725826220810},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1725826210235},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js","mtime":1725826212301}],"contextDependencies":[],"result":["import \"core-js/modules/es.error.cause.js\";\nimport prefetch from './utils/prefetch';\nimport { unslashEnd } from './utils/helpers';\nimport { NOT_FOUND_PATH } from '~/.temp/constants';\nconst dataUrl = process.env.DATA_URL;\nconst isPrefetched = {};\nconst isLoaded = {};\nexport default ((route, options = {}) => {\n  const {\n    shouldPrefetch = false,\n    force = false\n  } = options;\n\n  if (!process.isStatic) {\n    const {\n      dynamic = false\n    } = route.meta;\n    let path = dynamic ? route.matched[0].path : route.path;\n\n    if (route.name === '*') {\n      path = NOT_FOUND_PATH;\n    }\n\n    return new Promise((resolve, reject) => {\n      const onFail = err => {\n        isLoaded[route.path] = null;\n        reject(err);\n      };\n\n      const onSuccess = res => {\n        isLoaded[route.path] = null;\n        resolve(res);\n      };\n\n      if (force || !isLoaded[route.path]) {\n        isLoaded[route.path] = fetch(process.env.GRAPHQL_ENDPOINT, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            path,\n            dynamic\n          })\n        }).then(res => res.json());\n      }\n\n      isLoaded[route.path].then(res => {\n        if (res.errors) onFail(res.errors[0]);else if (res.code) onSuccess({\n          code: res.code\n        });else onSuccess({\n          data: res.data,\n          context: res.extensions ? res.extensions.context : {}\n        });\n        isLoaded[route.path] = null;\n      }).catch(onFail);\n    });\n  }\n\n  const hashMeta = document.querySelector('meta[name=\"gridsome:hash\"]').getAttribute('content');\n  return new Promise((resolve, reject) => {\n    const usePath = route.name === '*' ? NOT_FOUND_PATH : route.path;\n    const jsonPath = route.meta.dataPath || unslashEnd(usePath) + '/index.json';\n    const absPath = unslashEnd(dataUrl) + jsonPath;\n\n    if (shouldPrefetch && !isLoaded[jsonPath]) {\n      if (!isPrefetched[jsonPath]) {\n        isPrefetched[jsonPath] = prefetch(absPath);\n      }\n\n      return isPrefetched[jsonPath].then(() => resolve()).catch(() => resolve());\n    }\n\n    if (!isLoaded[jsonPath]) {\n      isLoaded[jsonPath] = fetchJSON(absPath);\n    }\n\n    return isLoaded[jsonPath].then(res => {\n      if (res.hash !== hashMeta) {\n        reject(createError(`Hash did not match: json=${res.hash}, document=${hashMeta}`, 'INVALID_HASH'));\n      } else {\n        resolve(res);\n      }\n    }).catch(err => {\n      isLoaded[jsonPath] = null;\n      reject(err);\n    });\n  });\n});\n\nfunction createError(message, code) {\n  const error = new Error(message);\n  error.code = code;\n  return error;\n}\n\nfunction fetchJSON(jsonPath) {\n  return new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest();\n    req.open('GET', jsonPath, true);\n    req.withCredentials = true;\n\n    req.onload = () => {\n      switch (req.status) {\n        case 200:\n          {\n            let results;\n\n            try {\n              results = JSON.parse(req.responseText);\n            } catch (err) {\n              return reject(new Error(`Failed to parse JSON from ${jsonPath}. ${err.message}.`));\n            }\n\n            if (!results.hash) {\n              return reject(new Error(`JSON data in ${jsonPath} is missing a hash.`));\n            }\n\n            return resolve(results);\n          }\n\n        case 404:\n          {\n            return reject(createError(req.statusText, req.status));\n          }\n      }\n\n      reject(new Error(`Failed to fetch ${jsonPath}.`));\n    };\n\n    req.onerror = () => {\n      reject(new Error(`Failed to fetch ${jsonPath}.`));\n    };\n\n    req.send(null);\n  });\n}",{"version":3,"names":["prefetch","unslashEnd","NOT_FOUND_PATH","dataUrl","process","env","DATA_URL","isPrefetched","isLoaded","route","options","shouldPrefetch","force","isStatic","dynamic","meta","path","matched","name","Promise","resolve","reject","onFail","err","onSuccess","res","fetch","GRAPHQL_ENDPOINT","method","headers","body","JSON","stringify","then","json","errors","code","data","context","extensions","catch","hashMeta","document","querySelector","getAttribute","usePath","jsonPath","dataPath","absPath","fetchJSON","hash","createError","message","error","Error","req","XMLHttpRequest","open","withCredentials","onload","status","results","parse","responseText","statusText","onerror","send"],"sources":["C:/Users/Oluwaseun Olowu/Documents/Njtd/njtd_site_new/node_modules/gridsome/app/fetch.js"],"sourcesContent":["import prefetch from './utils/prefetch'\nimport { unslashEnd } from './utils/helpers'\nimport { NOT_FOUND_PATH } from '~/.temp/constants'\n\nconst dataUrl = process.env.DATA_URL\nconst isPrefetched = {}\nconst isLoaded = {}\n\nexport default (route, options = {}) => {\n  const { shouldPrefetch = false, force = false } = options\n\n  if (!process.isStatic) {\n    const { dynamic = false } = route.meta\n    let path = dynamic ? route.matched[0].path : route.path\n\n    if (route.name === '*') {\n      path = NOT_FOUND_PATH\n    }\n\n    return new Promise((resolve, reject) => {\n      const onFail = err => {\n        isLoaded[route.path] = null\n        reject(err)\n      }\n\n      const onSuccess = res => {\n        isLoaded[route.path] = null\n        resolve(res)\n      }\n\n      if (force || !isLoaded[route.path]) {\n        isLoaded[route.path] = fetch(process.env.GRAPHQL_ENDPOINT, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ path, dynamic })\n        })\n          .then(res => res.json())\n      }\n\n      isLoaded[route.path]\n        .then(res => {\n          if (res.errors) onFail(res.errors[0])\n          else if (res.code) onSuccess({ code: res.code })\n          else onSuccess({\n            data: res.data,\n            context: res.extensions\n              ? res.extensions.context\n              : {}\n          })\n          isLoaded[route.path] = null\n        })\n        .catch(onFail)\n    })\n  }\n\n  const hashMeta = document\n    .querySelector('meta[name=\"gridsome:hash\"]')\n    .getAttribute('content')\n\n  return new Promise((resolve, reject) => {\n    const usePath = route.name === '*' ? NOT_FOUND_PATH : route.path\n    const jsonPath = route.meta.dataPath || unslashEnd(usePath) + '/index.json'\n    const absPath = unslashEnd(dataUrl) + jsonPath\n\n    if (shouldPrefetch && !isLoaded[jsonPath]) {\n      if (!isPrefetched[jsonPath]) {\n        isPrefetched[jsonPath] = prefetch(absPath)\n      }\n\n      return isPrefetched[jsonPath]\n        .then(() => resolve())\n        .catch(() => resolve())\n    }\n\n    if (!isLoaded[jsonPath]) {\n      isLoaded[jsonPath] = fetchJSON(absPath)\n    }\n\n    return isLoaded[jsonPath]\n      .then(res => {\n        if (res.hash !== hashMeta) {\n          reject(\n            createError(\n              `Hash did not match: json=${res.hash}, document=${hashMeta}`,\n              'INVALID_HASH'\n            )\n          )\n        } else {\n          resolve(res)\n        }\n      })\n      .catch(err => {\n        isLoaded[jsonPath] = null\n        reject(err)\n      })\n  })\n}\n\nfunction createError (message, code) {\n  const error = new Error(message)\n  error.code = code\n  return error\n}\n\nfunction fetchJSON (jsonPath) {\n  return new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest()\n\n    req.open('GET', jsonPath, true)\n    req.withCredentials = true\n\n    req.onload = () => {\n      switch (req.status) {\n        case 200: {\n          let results\n\n          try {\n            results = JSON.parse(req.responseText)\n          } catch (err) {\n            return reject(\n              new Error(`Failed to parse JSON from ${jsonPath}. ${err.message}.`)\n            )\n          }\n\n          if (!results.hash) {\n            return reject(\n              new Error(`JSON data in ${jsonPath} is missing a hash.`)\n            )\n          }\n\n          return resolve(results)\n        }\n        case 404: {\n          return reject(createError(req.statusText, req.status))\n        }\n      }\n\n      reject(new Error(`Failed to fetch ${jsonPath}.`))\n    }\n\n    req.onerror = () => {\n      reject(new Error(`Failed to fetch ${jsonPath}.`))\n    }\n\n    req.send(null)\n  })\n}\n"],"mappings":"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"}]}