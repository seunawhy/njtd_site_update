{"remainingRequest":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\src\\pages\\Paper\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\src\\pages\\Paper\\Index.vue","mtime":1725521740109},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1725826210235},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js","mtime":1725826212301},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1725826210235},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\vue-loader\\lib\\index.js","mtime":1725826215940}],"contextDependencies":[],"result":["import { mapGetters } from 'vuex';\nexport default {\n  name: 'paper',\n  metaInfo: {\n    title: 'Paper'\n  },\n\n  async mounted() {\n    try {\n      this.article = await this.$http.get(`/submissions/${this.paper.submissionId}/publications/${this.paper.publicationId}`);\n      this.found = true; // Fetch Number of Downloads\n\n      let submissions = await this.$downloadApi.get(`/downloads/${this.article.submissionId}`);\n      this.downloads = submissions.data.count;\n    } catch (E) {\n      if (E.response.status !== 404) {\n        this.$router.push('/');\n      }\n    } finally {\n      this.loading = false;\n    }\n  },\n\n  data() {\n    return {\n      found: false,\n      loading: true,\n      selectedTab: 0,\n      downloads: 0,\n      article: {},\n      tabs: [{\n        name: 'Abstract'\n      }, {\n        name: 'References'\n      }, {\n        name: 'Citations'\n      }, {\n        name: 'Related Articles'\n      }],\n      references: ''\n    };\n  },\n\n  computed: { ...mapGetters({\n      currentIssue: 'currentIssue'\n    }),\n\n    paper() {\n      try {\n        let ids = this.$route.query.paper.split('_');\n        return {\n          submissionId: ids[0],\n          publicationId: ids[1]\n        };\n      } catch (E) {\n        this.$router.push('/');\n      }\n    },\n\n    img() {\n      return this.article.coverImage[this.locale] || 'https://img.icons8.com/fluent/96/000000/journal.png';\n    },\n\n    downloadUrl() {\n      let baseUrl = this.article.urlPublished.replace(/\\/view.+$/, '/download');\n      return `${baseUrl}/${this.article.submissionId}/${this.galley.id}/${this.galley.fileId}`;\n    },\n\n    galley() {\n      return this.article.galleys[0] || {\n        file: {}\n      };\n    },\n\n    locale() {\n      return this.article.locale;\n    },\n\n    volume() {\n      if (this.currentIssue) {\n        return this.article.issueId === this.currentIssue.id ? this.currentIssue.identification : null;\n      }\n\n      return null;\n    }\n\n  },\n  methods: {\n    async recordDownload() {\n      this.downloads++;\n      await this.$downloadApi.put(`/downloads/${this.article.submissionId}`);\n    }\n\n  }\n};",null]}