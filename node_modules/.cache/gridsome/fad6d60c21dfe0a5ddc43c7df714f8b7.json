{"remainingRequest":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\src\\store\\modules\\article.js","dependencies":[{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\src\\store\\modules\\article.js","mtime":1725521740120},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1725826210235},{"path":"C:\\Users\\Oluwaseun Olowu\\Documents\\Njtd\\njtd_site_new\\node_modules\\babel-loader\\lib\\index.js","mtime":1725826212301}],"contextDependencies":[],"result":["import { $http } from '~/utils/http';\nexport default {\n  namespaced: true,\n  state: {\n    articles: [],\n    all: [],\n    recent: []\n  },\n  getters: {\n    all: state => state.articles,\n    allArticles: state => state.all,\n    recent: state => state.recent\n  },\n  mutations: {\n    SET(state, property) {\n      state[property.target] = property.value;\n    }\n\n  },\n  actions: {\n    async fetchArticles({\n      commit\n    }) {\n      let articles = [];\n      commit('SET_STATE', {\n        target: 'loading',\n        value: true\n      }, {\n        root: true\n      });\n\n      try {\n        let submissions = await $http.get('/issues/current');\n        submissions.articles.forEach(submission => {\n          articles.push(...submission.publications);\n        });\n        commit('SET_STATE', {\n          target: 'currentIssue',\n          value: {\n            id: submissions.id,\n            identification: submissions.identification,\n            coverImage: submissions.coverImageUrl,\n            datePublished: submissions.datePublished\n          }\n        }, {\n          root: true\n        });\n        let arts = articles;\n        arts.sort((f, s) => {\n          let fPages = f.pages.split('-');\n          let sPages = s.pages.split('-');\n          if (isNaN(parseInt(fPages[0]))) return 1;else if (isNaN(parseInt(sPages[0]))) return 1;\n          return parseInt(fPages[0]) > parseInt(sPages[0]) ? 1 : -1;\n        });\n        commit('SET', {\n          target: 'all',\n          value: arts\n        });\n      } catch (ex) {\n        console.log(ex);\n        commit('SET_STATE', {\n          target: 'currentIssue',\n          value: null\n        }, {\n          root: true\n        });\n        commit('SET', {\n          target: 'all',\n          value: null\n        });\n      }\n\n      commit('SET_STATE', {\n        target: 'loading',\n        value: false\n      }, {\n        root: true\n      });\n    }\n\n  }\n};",null]}